Pitch

https://github.com/bizzlebin/team/docs/pitch.txt

***

By Jeremiah Thomas, et al

***

Created on 2020-05-27

Updated on 2020-05-28

Updated on 2020-05-28

///
Our Pitch Ideas got a little far afield of the original goal: to ensure we communicate how our project idea meets the project goals (real business need, database, etc). Rather, it started getting into a lot of topics that will be covered in our SRS, or software requirements specification. This is not necessarily a bad thing—we now have a head start on the SRS!—but I had to *significantly* trim down some of the ideas to make this formal pitch document. As you make your changes, please keep in mind the scope of this pitch—it is not an SRS but more of a memo to corporate executives to "sell" the project—and make sure it retains a clear flow and proper grammar. I've just provided a solid first draft since I don't have any other, singular formal deliverable.

Remember to ask to clarification on Slack at any time. Use the main channel, if possible, so we can all benefit from the answers. I am monitoring it and will respond to any requests as soon as I am able—that usually means pretty quickly, if it is a weekday afternoon/evening! If you have something larger in scope that needs my attention, like a completely new idea (ie, thought collaboration), that is a better target for [non-group] e-mail or private Slack message.

Comment from Anna: I read some articles about sales pitches and I feel that ours is still too long. I made some edits, trying to cut it down to the bones so that we could make a pitch in just a couple minutes.
\\\

+++

Modern businesses generate vast amounts of digital information, including documentation for business processes, customer lists, accounting spreadsheets, and more. Efficiently accessing this data, however, can be a problem: only filenames and some filesystem-specific metadata are typically easily indexable for a file search and systems that add information or tags directly to files can cause integrity problems. Additionally, modifications or additions like to the files may not be acceptable due to HIPAA or other requirements. Clearly, a different solution is required.

Our proposal is to create a tag-based file manager which stores the metadata, in the form of custom tags, in a separate database. Instead of working directly in an operating system's limited file manager, we will offer a clean UI that can sort based on any number of user selected tags. The program will remember searches and open with the most recent search displayed to ensure continuity and clarity. It will provide some basic tags and instruction to get users started but otherwise aim at being "invisible", allowing businesses to instantly search, sort, and access important data. Using predictive technologies, the program will start searching while the user is still typing, providing immediate, critical feedback.

The database will be loaded with business-critical features including management controls that restrict tag creation and file tagging to specific groups or users to prevent confusion or abuse. Each tag will include an optional description, also protected within the database. Because this is stored inside a database, tagging operations automatically come with the key benefits of ACID: atomicity, consistency, isolation, durability. Every operation is guaranteed not to harm the integrity of either the database or the filesystem.

The new tag-based file manager system will address the shortcomings of other solutions. Business-critical files will never be modified in any way nor will any filenames change. Users will always be able to make use of this system side-by-side with the legacy file managers, simplifying administration. In short, our tag-based file manager will create new opportunities for organization and collaboration by making everyday access to business information simpler, easier, and more intuitive.
